% Generated by roxygen2 (4.0.1): do not edit by hand
\name{fileInput}
\alias{fileInput}
\title{File Upload Control}
\usage{
fileInput(inputId, label, multiple = FALSE, accept = NULL, style = NULL,
  barStyle = NULL)
}
\arguments{
\item{inputId}{Input variable to assign the control's value to.}

\item{label}{Display label for the control.}

\item{multiple}{Whether the user should be allowed to select and upload
multiple files at once. \bold{Does not work on older browsers, including
Internet Explorer 9 and earlier.}}

\item{accept}{A character vector of MIME types; gives the browser a hint of
what kind of files the server is expecting.}

\item{style}{A character vector containing a Bootstrap style class:
"", primary", "info", "success", "warning", "danger", "inverse", "link".}

\item{barStyle}{A character vector containing a Bootstrap style class:
 "", primary", "info", "success", "warning", "danger", "inverse", "link".}
}
\description{
Create a file upload control that can be used to upload one or more files.  This
input incorporates the method of Trevor Davis to allow the 'Browse' button to be styled:
\url{https://gist.github.com/davist11/645816}
}
\details{
Whenever a file upload completes, the corresponding input variable is set
to a dataframe. This dataframe contains one row for each selected file, and
the following columns:
\describe{
  \item{\code{name}}{The filename provided by the web browser. This is
  \strong{not} the path to read to get at the actual data that was uploaded
  (see
  \code{datapath} column).}
  \item{\code{size}}{The size of the uploaded data, in
  bytes.}
  \item{\code{type}}{The MIME type reported by the browser (for example,
  \code{text/plain}), or empty string if the browser didn't know.}
  \item{\code{datapath}}{The path to a temp file that contains the data that was
  uploaded. This file may be deleted if the user performs another upload
  operation.}
}
}
\examples{
\dontrun{
  # In server.R
  output$distPlot <- renderPlot({
    # Take a dependency on input$goButton
    input$goButton

    # Use isolate() to avoid dependency on input$obs
    dist <- isolate(rnorm(input$obs))
    hist(dist)
  })

  # In ui.R
   actionButton("goButton", "Go!", icon="space-shuttle", style="success")
  }
}
\seealso{
Other input elements: \code{\link{actionButton}}
}

